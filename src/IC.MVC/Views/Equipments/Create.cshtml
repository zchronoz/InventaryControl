@model IC.MVC.ViewModels.EquipmentViewModel

@{
    ViewBag.Title = "Criar";
}

<h2>Novo Produto</h2>

@using (Html.BeginForm("Create", "Equipments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert" id="DivErro">
            <div class="row">
                <div class="col-md-1">
                    <span class="fa fa-remove" aria-hidden="true"></span>
                    <span class="sr-only">Erro:</span>
                </div>
                <div class="col-md-11">
                    @ViewBag.ErrorMessage
                </div>
            </div>
        </div>
    }

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeEquipment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeEquipment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelEquipment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelEquipment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateAcquisition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAcquisition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAcquisition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValueAcquisition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValueAcquisition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValueAcquisition, "", new { @class = "text-danger validator.methods.number validator.methods.range" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadPhoto, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadPhoto, new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UploadPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" id="btnCriar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalization")

    <script>
        $(document).ready(function () {
            $("#btnCriar").on("click", function () {
                $("#DivErro").hide();
            });
        });
    </script>
}