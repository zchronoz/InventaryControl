@model IC.MVC.ViewModels.EquipmentViewModel

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Produto</h2>

@using (Html.BeginForm("Edit", "Equipments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PathImage)
    @Html.HiddenFor(model => model.EquipmentId)

    if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert" id="DivErro">
            <div class="row">
                <div class="col-md-1">
                    <span class="fa fa-remove" aria-hidden="true"></span>
                    <span class="sr-only">Erro:</span>
                </div>
                <div class="col-md-11">
                    @ViewBag.ErrorMessage
                </div>
            </div>
        </div>
    }

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EquipmentId)

        <div class="form-group">
            @Html.LabelFor(model => model.TypeEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeEquipment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeEquipment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelEquipment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelEquipment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateAcquisition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAcquisition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAcquisition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValueAcquisition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValueAcquisition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValueAcquisition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Image != null)
        {
            <div class="form-group">
                <label for="imgEquipment" class="control-label col-md-2">Imagem atual do produto</label>
                <div class="col-md-10">
                    @{
                        var base64 = Convert.ToBase64String(Model.Image);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <a data-toggle="modal" href="#" data-target="#modalImage" onClick='zoom(this)'>
                            <img src='@imgSrc' id="imgEquipment" style="max-width:100px; max-height:100px;" />
                        </a>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RemoveImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.RemoveImage, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }

        <div class="form-group">
            <label for="UploadPhoto" class="control-label col-md-2">Alterar Imagem?</label>
            @*@Html.LabelFor(model => model.UploadPhoto, new { @class = "control-label col-md-2", text = "Alterar Imagem?" })*@
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadPhoto, new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UploadPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal fade" id="modalImage" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Imagem do produto</h4>
                    </div>
                    <div class="modal-body" id="zoomImage">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" id="btnSalvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalization")
    <script>
        $(document).ready(function () {
            $("#btnSalvar").on("click", function () {
                $("#DivErro").hide();
            });
        });

        function zoom(element) {
            let data = document.getElementById("imgEquipment").getAttribute("src");
            setTimeout(function () {
                document.getElementById("zoomImage").innerHTML = "<img src='" + data + "' id='modalImage' width='100%'> ";
            }, 500);
        }
    </script>
}